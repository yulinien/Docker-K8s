apiVersion: v1
kind: Namespace
metadata:
  name: example

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /data/mysql

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: example
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---

apiVersion: v1
kind: Secret
metadata:
  name: mysql-root-pass
  namespace: example
type: Opaque
data:
  MYSQL_ROOT_PASSWORD: bGVvbnl1MTExOA==

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: spring-datasource-config
  namespace: example
data:
  spring.datasource.url: "jdbc:mysql://localhost:3306/db1" # 使用 localhost
  spring.datasource.username: "root"
  spring.datasource.driver-class-name: "com.mysql.cj.jdbc.Driver"

---

apiVersion: v1
kind: Secret
metadata:
  name: spring-datasource-secret
  namespace: example
type: Opaque
data:
  spring.datasource.password: "bGVvbnl1MTExOA=="

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: combined-app-deploy
  namespace: example
  labels:
    app: combined-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: combined-app
  template:
    metadata:
      labels:
        app: combined-app
    spec:
      containers:
        - name: mysql
          image: yulinien/docker-java
          imagePullPolicy: IfNotPresent
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-root-pass
                  key: MYSQL_ROOT_PASSWORD
          volumeMounts:
            - name: mysql-pv
              mountPath: /var/lib/mysql
        - name: leonapp-container
          image: yulinien/leon-app
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
      volumes:
        - name: mysql-pv
          persistentVolumeClaim:
            claimName: mysql-pvc
